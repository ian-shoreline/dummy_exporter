apiVersion: v1
data:
  scraper.yml: |
    scrape_configs:
    - job_name: 'istio'
      scrape_interval: 10s
      kubernetes_sd_configs:
      - role: pod
        namespaces:
          names:
          - istio
      resource_mapping_config:
        mode: exporter
        resource_types:
        - pod
        - container
        default_resource_type: pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_name]
        regex: ".*istio.*"
        action: keep
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
        separator: "."
        action: replace
        target_label: __shoreline_rq_name
    - job_name: 'node-exporter'
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - "monitoring"
      resource_mapping_config:
        mode: exporter
        resource_types:
        - host # default resource type, default value of __shoreline_rq_type__
      relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        regex: "node-exporter-prometheus-node-exporter"
        action: keep
      - target_label: __shoreline_rq_type
        action: replace # its default value
        replacement: host # host type, the resource will mapping the host id where the scraper is located at default.
      metric_relabel_configs:
      - source_labels: [__name__] # metric filter
        action: keep
        regex: (node_cpu_seconds_total|node_memory_MemFree_bytes|node_memory_Cached_bytes|node_memory_MemTotal_bytes|node_memory_Buffers_bytes|node_filesystem_avail_bytes|node_network_transmit_drop_total|node_network_transmit_packets_total|node_network_transmit_bytes_total|node_network_receive_packets_total|node_network_receive_bytes_total|node_disk_reads_completed_total|node_disk_writes_completed_total|node_disk_read_bytes_total|node_disk_written_bytes_total|node_vmstat_pgfault|node_vmstat_pgmajfault|node_vmstat_oom_kill|node_filesystem_free_bytes|node_filesystem_size_bytes|node_network_receive_errs_total|node_network_transmit_errs_total|node_network_receive_drop_total)
    - job_name: 'cadvisor'
      scrape_interval: 10s
      honor_timestamps: false
      scheme: https
      metrics_path: /metrics/cadvisor
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      resource_mapping_config:
        mode: metric
        resource_types:
        - pod
        - container
        default_resource_type: container # default resource type, default value of __shoreline_rq_type__
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      metric_relabel_configs:
      - source_labels: [__name__] # metric filter
        action: keep
        regex: (container_cpu_usage_seconds_total|container_memory_usage_bytes|container_spec_cpu_quota|container_fs_limit_bytes|container_spec_memory_limit_bytes|container_network_receive_packets_dropped_total|container_network_transmit_packets_dropped_total|container_network_receive_bytes_total|container_network_transmit_bytes_total|container_memory_working_set_bytes)
      - source_labels: [container]
        target_label: __shoreline_rq_type
        regex: (^$|^POD$)
        action: replace
        replacement: pod
      - source_labels: [namespace]
        target_label: __shoreline_rq_tags_namespace
      - source_labels: [pod]
        target_label: __shoreline_rq_tags_pod_name
      - source_labels: [container]
        regex: (^([^P]|P[^O]|PO[^D])+$)  # not empty or POD
        target_label: __shoreline_rq_tags_container_name
      - regex: (image|id|name|namespace|pod)
        action: labeldrop
    - job_name: 'kubelets'
      scheme: https
      metrics_path: /metrics
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      resource_mapping_config:
        mode: metric
        resource_types:
        - pod # default resource type, default value of __shoreline_rq_type
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      metric_relabel_configs:
      - source_labels: [__name__] # metric filter
        action: keep
        regex: (kubelet_volume_stats_available_bytes|kubelet_volume_stats_capacity_bytes)
      - source_labels: [namespace]
        target_label: __shoreline_rq_tags_namespace
      - source_labels: [persistentvolumeclaim]
        target_label: __shoreline_rq_tags_pvc_ # TODO:, promethues original rule does not allow regex for target_label
    - job_name: 'envoy'
      scrape_interval: 10s
      metrics_path: /stats/prometheus
      kubernetes_sd_configs:
      - role: pod
      resource_mapping_config:
        mode: exporter
        resource_types:
        - pod
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: keep
        regex: istio-proxy
      - source_labels: [__meta_kubernetes_pod_container_port_name]
        action: keep
        regex: '.*-envoy-prom'
      - source_labels: [__address__, __meta_kubernetes_pod_container_port_number]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
        separator: "."
        action: replace
        target_label: __shoreline_rq_name
      metric_relabel_configs:
      - source_labels: [__name__] # metric filter
        action: keep
        regex: (istio_request_duration_milliseconds_count|istio_request_duration_milliseconds_bucket)
kind: ConfigMap
metadata:
  annotations:
    artifact.spinnaker.io/location: shoreline
    artifact.spinnaker.io/name: scraper-config
    artifact.spinnaker.io/type: kubernetes/configMap
    artifact.spinnaker.io/version: v000
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"scraper.yml":"scrape_configs:\n- job_name: 'node-exporter'\n  kubernetes_sd_configs:\n  - role: endpoints\n    namespaces:\n      names:\n      - \"monitoring\"\n  resource_mapping_config:\n    mode: exporter\n    resource_types:\n    - host # default resource type, default value of __shoreline_rq_type__\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_endpoints_name]\n    regex: \"node-exporter-prometheus-node-exporter\"\n    action: keep\n  - target_label: __shoreline_rq_type\n    action: replace # its default value\n    replacement: host # host type, the resource will mapping the host id where the scraper is located at default.\n  metric_relabel_configs:\n  - source_labels: [__name__] # metric filter\n    action: keep\n    regex: (node_cpu_seconds_total|node_memory_MemFree_bytes|node_memory_Cached_bytes|node_memory_MemTotal_bytes|node_memory_Buffers_bytes|node_filesystem_avail_bytes|node_network_transmit_drop_total|node_network_transmit_packets_total|node_network_transmit_bytes_total|node_network_receive_packets_total|node_network_receive_bytes_total|node_disk_reads_completed_total|node_disk_writes_completed_total|node_disk_read_bytes_total|node_disk_written_bytes_total|node_vmstat_pgfault|node_vmstat_pgmajfault|node_vmstat_oom_kill|node_filesystem_free_bytes|node_filesystem_size_bytes|node_network_receive_errs_total|node_network_transmit_errs_total|node_network_receive_drop_total)\n- job_name: 'cadvisor'\n  scrape_interval: 10s\n  honor_timestamps: false\n  scheme: https\n  metrics_path: /metrics/cadvisor\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  kubernetes_sd_configs:\n  - role: node\n  resource_mapping_config:\n    mode: metric\n    resource_types:\n    - pod\n    - container\n    default_resource_type: container # default resource type, default value of __shoreline_rq_type__\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  metric_relabel_configs:\n  - source_labels: [__name__] # metric filter\n    action: keep\n    regex: (container_cpu_usage_seconds_total|container_memory_usage_bytes|container_spec_cpu_quota|container_fs_limit_bytes|container_spec_memory_limit_bytes|container_network_receive_packets_dropped_total|container_network_transmit_packets_dropped_total|container_network_receive_bytes_total|container_network_transmit_bytes_total|container_memory_working_set_bytes)\n  - source_labels: [container]\n    target_label: __shoreline_rq_type\n    regex: (^$|^POD$)\n    action: replace\n    replacement: pod\n  - source_labels: [namespace]\n    target_label: __shoreline_rq_tags_namespace\n  - source_labels: [pod]\n    target_label: __shoreline_rq_tags_pod_name\n  - source_labels: [container]\n    regex: (^([^P]|P[^O]|PO[^D])+$)  # not empty or POD\n    target_label: __shoreline_rq_tags_container_name\n  - regex: (image|id|name|namespace|pod)\n    action: labeldrop\n- job_name: 'kubelets'\n  scheme: https\n  metrics_path: /metrics\n  tls_config:\n    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n  kubernetes_sd_configs:\n  - role: node\n  resource_mapping_config:\n    mode: metric\n    resource_types:\n    - pod # default resource type, default value of __shoreline_rq_type\n  relabel_configs:\n  - action: labelmap\n    regex: __meta_kubernetes_node_label_(.+)\n  metric_relabel_configs:\n  - source_labels: [__name__] # metric filter\n    action: keep\n    regex: (kubelet_volume_stats_available_bytes|kubelet_volume_stats_capacity_bytes)\n  - source_labels: [namespace]\n    target_label: __shoreline_rq_tags_namespace\n  - source_labels: [persistentvolumeclaim]\n    target_label: __shoreline_rq_tags_pvc_ # TODO:, promethues original rule does not allow regex for target_label\n- job_name: 'envoy'\n  scrape_interval: 10s\n  metrics_path: /stats/prometheus\n  kubernetes_sd_configs:\n  - role: pod\n  resource_mapping_config:\n    mode: exporter\n    resource_types:\n    - pod\n  relabel_configs:\n  - source_labels: [__meta_kubernetes_pod_container_name]\n    action: keep\n    regex: istio-proxy\n  - source_labels: [__meta_kubernetes_pod_container_port_name]\n    action: keep\n    regex: '.*-envoy-prom'\n  - source_labels: [__address__, __meta_kubernetes_pod_container_port_number]\n    action: replace\n    target_label: __address__\n    regex: ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]\n    separator: \".\"\n    action: replace\n    target_label: __shoreline_rq_name\n  metric_relabel_configs:\n  - source_labels: [__name__] # metric filter\n    action: keep\n    regex: (istio_request_duration_milliseconds_count|istio_request_duration_milliseconds_bucket)\n"},"kind":"ConfigMap","metadata":{"annotations":{"artifact.spinnaker.io/location":"shoreline","artifact.spinnaker.io/name":"scraper-config","artifact.spinnaker.io/type":"kubernetes/configMap","artifact.spinnaker.io/version":"v000","moniker.spinnaker.io/application":"demo4","moniker.spinnaker.io/cluster":"configMap scraper-config","moniker.spinnaker.io/sequence":"0"},"labels":{"app.kubernetes.io/managed-by":"spinnaker","app.kubernetes.io/name":"demo4","moniker.spinnaker.io/sequence":"0"},"name":"scraper-config-v000","namespace":"shoreline"}}
    moniker.spinnaker.io/application: demo4
    moniker.spinnaker.io/cluster: configMap scraper-config
    moniker.spinnaker.io/sequence: "0"
  creationTimestamp: "2022-08-01T22:26:49Z"
  labels:
    app.kubernetes.io/managed-by: spinnaker
    app.kubernetes.io/name: demo4
    moniker.spinnaker.io/sequence: "0"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:data:
        .: {}
        f:scraper.yml: {}
      f:metadata:
        f:annotations:
          .: {}
          f:artifact.spinnaker.io/location: {}
          f:artifact.spinnaker.io/name: {}
          f:artifact.spinnaker.io/type: {}
          f:artifact.spinnaker.io/version: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:moniker.spinnaker.io/application: {}
          f:moniker.spinnaker.io/cluster: {}
          f:moniker.spinnaker.io/sequence: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/managed-by: {}
          f:app.kubernetes.io/name: {}
          f:moniker.spinnaker.io/sequence: {}
    manager: kubectl
    operation: Update
    time: "2022-08-01T22:26:49Z"
  name: scraper-config-v000
  namespace: shoreline
  resourceVersion: "29327310"
  uid: cf28232b-9a58-4cd9-ab48-1681c484990c